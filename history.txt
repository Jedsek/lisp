(1)
1
(1)
1
(1)
(+ 1 2 3)
(1)
(- 1)
(= 1 2 3)
(- 1)
(- 1 2 3)
(if (= 1) 1 2)
(if (!= 1) 1 2)
(if (!= 1 2) 1 2)
(if (!= 1 1) 1 2)
(= 1)
(= 1 2)
(=)
(def a 1)
a
(a)
(def b (+ a 1))
(def b 1)
(+ a 1)
(def a 1)
(+ a 1)
(def a 1)
(a)
(+ a 1)
(def a 1)
(a)
(def a 1)
(a)
(def a 1)
(+ a 1)
(def a 1)
(+ a 1)
(def a 1)
a
(def a (+ a 1))
(+ 1 2 3)
(+ 1 2)
(def a 1)
(+ a 1)
(< 1 2 3 4 5) 
(if (< 1 2 3 4 5) "Great" "Less")
"123"
(if (< 1 2 3 4 5) "Great" "Less")
(if (< 1 2 3 4 5) "Yes" "No")
(def condition (< 1 2 3 4 5))
(def cond (< 1 2 3 4 5))
(if cond "Yes" "No")
(def ++ +)
(++ 1 2)
(++ 1 2 3)
(- 1 2 3)
(+ 1 2 33)
(def a 1)
(+ a a a)
(> 1 2 3)
(> 1 2 1)
(> 1 1 1)
(=1 1 1)
(= 1 1 1)
:h
:c
(def a 1) 1
((def a 1) (+ a 1))
> (if (< 1 2 3 4 5) "Yes" "No")
(if (< 1 2 3 4 5) "Yes" "No")
:h
:q
(++ "1" "2")
"1"
"1123
"1123"
"123"
"123
"123"
(++ "1" "2")
"123"
(++ "1" "2")
"123"
(++ "1" "2")
(++ "1" "2" 1)
(/ 1 0)
(+ 1)
(++ 1)
(++ "1")
(++ 1)
(++ 1 2)
(++ "1")
(++ "1" "2")
(++)
(+)
(-)
(- 1)
(- 1 2)
(- 1 2 3)
(+)
(+ 1)
(+ 1 2)
(* 1 2)
(* 1)
(*)
(/ 1 2)
(/)
(/ 1 0)
(/ 1 0 0)
(/)
(/ 1)
(/ 1 2)
(/ 1 2 3)
(/ 1 2 3 0)
(/ 0)
(/ 0 0)
{1}
(1)
(1 2 3)
(1 2)
(1 2 3)
(1)
(1 2)
(1 2 3)
(o 1 2)
(o 1 2 3)
{1}
{1 2}
{1 2 3}
{1 2  3}
{1 2  3 (1)}
{1 2  3 (1 2 3)}
{1 2 3 (1 2 3)}
{1 2 3 (1 2 3) fn}
{1 2 3 (1 2 3) fn def}
{1 2 3 (1 2 3) fn def (a) 1}
{1 2 3 }
{1 2 3 4}
{1}
{1 2 3}
{1 2 3 (1 2 3)}
(a 1 2)
(+)
(+ 1 2)
()
(1)
(1 2)
(1 2 3)
(1)
()
(1 2)
(1 2 3)
(1)
(1 2)
(1)
()
({})
({} {})
<\n>(def a 1)
(def a <\n>    1)
(def add-one 1)
(def add-one 2)
(add-one)
(1)
(1 2)
(+ add-one 1)
(+ 1 2)
(1)
(+ 1)
(1)
(+ 1 2)
(def a 1)
(a)
(+ a 1)
(def f fn (s) (+ s 1))
(def f (fn (s) (+ s 1)))
(f 1)
(f 2)
(+ 1 1)
:l
(def f (fn (s) s + 1))
(def (f (fn (s) s + 1)))
(def (f (fn (s) (+ s 1)))
(def (f (fn (s) (+ s 1))))
(def (f (fn (s) (+ s 1))
(def (f (fn (s) (+ s 1))))
(def f (fn (s) (+ s 1)))
(f 1)
(def f f)
f
(f 1)
(def f (f 1))
(f 1)
(f 2)
(f 3)
(f 1)
(f)
f
(def f (fn (f 1)))
(def f (fn () (f 1)))
(f)
(f 1)
(f 1 2)
(f 1 2 3)
(f)
f
(f ())
(fn 1)
(fn a 1)
(fn 1)
(fn)
(fn ()
(fn ())
(fn 1)
(def a 1)
(a)
(fn a 1)
(def a (fn a 1))
(a 1)
(a)
(a 1)
(def fib (fn n (
if (= n 0) 0 (if (= n 1) 1 ((+ (fib (- n 1)) (fib (- n 2))))))))
(def fib (fn n (<\n><\n><\n><\n><\n><\n><\n>
if (= n 0) 0 (if (= n 1) 1 ((+ (fib (- n 1)) (fib (- n 2))))))))
(def fib (fn n ( if (= n 0) 0 ( if (= n 1) 1 ( (+ (fib (- n 1)) (fib (- n 2))))))))(def fib (fn n ( if (= n 0) 0 ( if (= n 1) 1 ( (+ (fib (- n 1)) (fib (- n 2))))))))(def fib (fn n ( if (= n 0) 0 ( if (= n 1) 1 ( (+ (fib (- n 1)) (fib (- n 2))))))))
(fib 1)
(fib 0)
(fib 3)
(fib 4)
(fib 5)
(fib 6)
(fib 7)
(def fib (fn n (if (= n 0) 0 (if (= n 1) 1 ((+ (fib (- n 1)) (fib (- n 2))))))))
(def fib (fn n (
if (= n 0) 0 (if (= n 1) 1 ((+ (fib (- n 1)) (fib (- n 2))))))))
(println 1)
(println 2)
(println 2 3 4)
